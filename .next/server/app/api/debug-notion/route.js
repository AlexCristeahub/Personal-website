"use strict";(()=>{var e={};e.id=247,e.ids=[247],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},839:(e,t,o)=>{o.r(t),o.d(t,{originalPathname:()=>D,patchFetch:()=>N,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>d,staticGenerationAsyncStorage:()=>g});var s={};o.r(s),o.d(s,{GET:()=>u});var r=o(3278),n=o(5002),i=o(4877),a=o(9081),p=o(1309);async function u(){let e={};if(e.environmentCheck={hasToken:!!process.env.NOTION_TOKEN,hasDbId:!!process.env.NOTION_DATABASE_ID,tokenPreview:process.env.NOTION_TOKEN?process.env.NOTION_TOKEN.substring(0,10)+"...":"MISSING",dbId:process.env.NOTION_DATABASE_ID||"MISSING"},console.log("\uD83D\uDD0D Debug Notion - Environment Check:",e.environmentCheck),!process.env.NOTION_TOKEN||!process.env.NOTION_DATABASE_ID)return p.NextResponse.json({...e,error:"Missing required environment variables"});try{let t=new a.Client({auth:process.env.NOTION_TOKEN});try{console.log("\uD83D\uDD0D Debug Notion - Testing database query...");let o=await t.databases.query({database_id:process.env.NOTION_DATABASE_ID});if(e.connectionTest="SUCCESS",e.totalPages=o.results.length,console.log("✅ Debug Notion - Connection successful, found",o.results.length,"pages"),o.results.length>0){let t=o.results[0];e.availableProperties=Object.keys(t.properties),console.log("\uD83D\uDCCA Debug Notion - Available properties:",e.availableProperties),e.firstPageExample={id:t.id,properties:{}},["Title","Published","Tags","Slug","Excerpt","Published Date"].forEach(o=>{t.properties[o]?e.firstPageExample.properties[o]=t.properties[o]:(e.missingProperties=e.missingProperties||[],e.missingProperties.push(o))}),console.log("\uD83D\uDCCA Debug Notion - Missing properties:",e.missingProperties||"None"),e.sampleData=o.results.slice(0,3).map(e=>{let t=e.properties.Title?.title?.[0]?.plain_text||"No title",o=e.properties.Published?.checkbox||!1,s=e.properties.Tags?.multi_select?.map(e=>e.name)||[];return{id:e.id,title:t,published:o,tags:s,hasSlug:!!e.properties.Slug,hasExcerpt:!!e.properties.Excerpt,hasPublishedDate:!!e.properties["Published Date"]}}),console.log("\uD83D\uDCCA Debug Notion - Sample data:",e.sampleData)}else console.log("⚠️ Debug Notion - No pages found in database"),e.warning="No pages found in database. Check if integration is connected to the database."}catch(t){console.error("❌ Debug Notion - Connection failed:",t),e.connectionTest="FAILED",e.notionError={message:t.message,code:t.code,status:t.status}}}catch(t){console.error("❌ Debug Notion - Client error:",t),e.clientError=t.message}return p.NextResponse.json(e)}let l=new r.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/debug-notion/route",pathname:"/api/debug-notion",filename:"route",bundlePath:"app/api/debug-notion/route"},resolvedPagePath:"/Users/alex/Downloads/personal/Personal-website/app/api/debug-notion/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:c,staticGenerationAsyncStorage:g,serverHooks:d}=l,D="/api/debug-notion/route";function N(){return(0,i.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:g})}}};var t=require("../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),s=t.X(0,[787,793],()=>o(839));module.exports=s})();